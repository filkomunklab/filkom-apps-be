// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ------- global ------------------------
model Admin {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String
  password  String
  role      Role      @default(ADMIN)
  token     String?   @unique
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Employee {
  id        String    @id @default(uuid())
  nik       String    @unique
  password  String
  firstName String
  lastName  String
  token     String?   @unique
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Student {
  id        String    @id @default(uuid())
  nim       String    @unique
  password  String
  firstName String
  lastName  String
  email     String?
  phoneNo   String?
  token     String?   @unique
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  FormSPT   FormSPT[]
}

model UserRole {
  id        String    @id @default(uuid())
  userId    String    @unique
  role      Role      @default(MAHASISWA)
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

enum Role {
  ADMIN
  SUPER_ADMIN
  MAHASISWA
  ADMIN_LPMI
  OPERATOR_LPMI
  ALUMNI
  DEKAN
  KAPRODI
  DOSEN
}

//-------------------Klabat Bridge ----------------------//

enum status {
  WAITING
  APPROVED
  REJECTED
}

enum gender {
  LAKILAKI
  PEREMPUAN
}

enum minor {
  GD2A //Game Development and Graphic Design Animation 
  CIA // Competitive Intelligence Analysis (CIA)
  WMD //Web / Mobile Developer (WMD)
  ITPM //IT PROJECT MANAGER
  DMM //DIGITAL MARKETING MANAGER
  TECHNOPRENEUR
}

model FormSPT {
  id                String    @id @default(uuid())
  nik               String
  date_of_birth     String // Mengubah ke tipe data String
  gender            gender //male and female
  birth_mother      String
  graduate_plan     String //semester berapa?
  minor             minor
  remaining_credits String // perhatikan kembali untuk sisa jumlah sks
  remaining_classes String
  approvalFak       status    @default(WAITING) // approved dan reject, default waiting
  approvalReg       status    @default(WAITING)
  created_at        DateTime  @default(now())
  updated_at        DateTime?
  student           Student   @relation(fields: [studentId], references: [nim])
  studentId         String
}

//-------------------Skripsi App ------------------------

//-------------------Bimbingan Akademik-------------------
