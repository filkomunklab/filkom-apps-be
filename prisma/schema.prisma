// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ------- global ------------------------
model Admin {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String
  password  String
  role      Role      @default(ADMIN)
  token     String?   @unique
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Employee {
  id        String    @id @default(uuid())
  nik       String    @unique
  nidn      String?   @unique
  password  String
  firstName String
  lastName  String
  degree    String?
  prodi     String?
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model Student {
  id        String    @id @default(uuid())
  reg_num   String?   @unique
  nim       String    @unique
  password  String
  firstName String
  lastName  String?
  faculty   String
  major     String
  address   String?
  email     String?   @unique
  phoneNo   String?
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model UserRole {
  id        String    @id @default(uuid())
  userId    String
  role      Role      @default(MAHASISWA)
  createdBy String?
  updatedBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

enum Role {
  ADMIN
  SUPER_ADMIN
  MAHASISWA
  ADMIN_LPMI
  OPERATOR_LPMI
  ALUMNI
  DEKAN
  KAPRODI
  DOSEN
  DOSEN_MK
  OPERATOR_FAKULTAS
}

//-------------------Klabat Bridge ----------------------

//-------------------Skripsi App ------------------------
model Thesis_Student {
  id       String @id @default(uuid())
  fullname String @unique
}

model Group_Student {
  id         String @id @default(uuid())
  // @relation
  group_id   String
  // @relation
  student_id String
}

model Group {
  id            String    @id @default(uuid())
  progress      Progress?
  title         String?
  keywords      String?
  abstrak       String?
  reference     String?
  // @relation
  submission_id String?   @unique
  // @relation
  proposal_id   String?   @unique
  // @relation
  skripsi_id    String?   @unique
  created_at    DateTime  @default(now())
  updated_at    DateTime?
}

enum Progress {
  Submission
  Proposal
  Skripsi
}

model Academic_Calendar {
  id       String   @id @default(uuid())
  semester Semester
  year     String
}

enum Semester {
  Ganjil
  Genap
  Padat
}

model Classroom {
  id          String @id @default(uuid())
  // @relation
  dosen_mk_id String
  // @relation
  academic_id String
}

model Submission {
  id                   String             @id @default(uuid())
  file_name            String
  file_size            String
  is_consultation      Boolean
  // @relation
  proposed_advisor     String
  proposed_co_advisor1 String?
  proposed_co_advisor2 String?
  is_approve           Submission_Approve @default(Waiting)
  // @relation
  classroom_id         String
  created_at           DateTime           @default(now())
  updated_at           DateTime?
}

enum Submission_Approve {
  Waiting
  Approve
  Rejected
}

model Proposal {
  id                                       String              @id @default(uuid())
  file_name_proposal                       String?
  file_name_payment                        String?
  file_name_plagiarismcheck                String?
  upload_date_proposal                     DateTime?
  upload_date_payment                      DateTime?
  upload_date_plagiarismcheck              DateTime?
  file_size_proposal                       String?
  file_size_payment                        String?
  file_size_plagiarismcheck                String?
  // @relation
  advisor                                  String
  // @relation
  co_advisor1                              String?
  // @relation
  co_advisor2                              String?
  // @relation
  classroom_id                             String
  is_proposal_approve_by_advisor           Thesis_Approve?
  is_proposal_approve_by_co_advisor1       Thesis_Approve?
  is_proposal_approve_by_co_advisor2       Thesis_Approve?
  advisor_proposal_approved_date           DateTime?
  co_advisor1_proposal_approved_date       DateTime?
  co_advisor2_proposal_approved_date       DateTime?
  // @relation
  panelist_chairman                        String?
  // @relation
  panelist_member                          String?
  start_defence                            String?
  end_defence                              String?
  defence_room                             String?
  defence_date                             String?
  is_report_open                           Boolean             @default(false)
  is_report_approve_by_dekan               Boolean?
  is_report_approve_by_panelist_chairman   Boolean?
  is_report_approve_by_panelist_member     Boolean?
  is_report_approve_by_advisor             Boolean?
  exam_conclution                          Exam_Conclution?
  changes_conclusion                       Changes_Conclusion?
  assessment_conclution                    String?
  is_pass                                  Pass?
  report_date                              DateTime?
  file_name_revision                       String?
  upload_date_revision                     DateTime?
  file_size_revision                       String?
  is_revision_approve_by_panelist_chairman Revision_Approve?
  is_revision_approve_by_panelist_member   Revision_Approve?
  is_revision_approve_by_advisor           Revision_Approve?
  panelist_chairman_revision_approve_date  DateTime?
  panelist_member_revision_approve_date    DateTime?
  advisor_revision_approve_date            DateTime?
}

model Skripsi {
  id                                       String              @id @default(uuid())
  file_name_skripsi                        String?
  file_name_payment                        String?
  file_name_plagiarismcheck                String?
  upload_date_skripsi                      DateTime?
  upload_date_payment                      DateTime?
  upload_date_plagiarismcheck              DateTime?
  file_size_skripsi                        String?
  file_size_payment                        String?
  file_size_plagiarismcheck                String?
  // @relation
  advisor                                  String
  // @relation
  co_advisor1                              String?
  // @relation
  co_advisor2                              String?
  // @relation
  classroom_id                             String?
  is_skripsi_approve_by_advisor            Thesis_Approve?
  is_skripsi_approve_by_co_advisor1        Thesis_Approve?
  is_skripsi_approve_by_co_advisor2        Thesis_Approve?
  advisor_skripsi_approved_date            DateTime?
  co_advisor1_skripsi_approved_date        DateTime?
  co_advisor2_skripsi_approved_date        DateTime?
  // @relation
  panelist_chairman                        String?
  // @relation
  panelist_member                          String?
  start_defence                            String?
  end_defence                              String?
  defence_room                             String?
  defence_date                             String?
  is_report_open                           Boolean             @default(false)
  is_report_approve_by_dekan               Boolean?
  is_report_approve_by_panelist_chairman   Boolean?
  is_report_approve_by_panelist_member     Boolean?
  is_report_approve_by_advisor             Boolean?
  exam_conclution                          Exam_Conclution?
  changes_conclusion                       Changes_Conclusion?
  assessment_conclution                    String?
  is_pass                                  Pass?
  report_date                              DateTime?
  file_name_revision                       String?
  upload_date_revision                     DateTime?
  file_size_revision                       String?
  is_revision_approve_by_panelist_chairman Revision_Approve?
  is_revision_approve_by_panelist_member   Revision_Approve?
  is_revision_approve_by_advisor           Revision_Approve?
  panelist_chairman_revision_approve_date  DateTime?
  panelist_member_revision_approve_date    DateTime?
  advisor_revision_approve_date            DateTime?
  file_name_hki                            String?
  file_name_journal                        String?
  file_name_sourcecode                     String?
  file_name_poster                         String?
  file_name_tutorial                       String?
  upload_date_hki                          DateTime?
  upload_date_journal                      DateTime?
  upload_date_sourcecode                   DateTime?
  upload_date_poster                       DateTime?
  upload_date_tutorial                     DateTime?
  file_size_hki                            String?
  file_size_journal                        String?
  file_size_sourcecode                     String?
  link_soucecode                           String?
  file_size_poster                         String?
  file_size_tutorial                       String?
}

enum Thesis_Approve {
  Waiting
  Approve
  Rejected
}

enum Exam_Conclution {
  Rejected
  Approve
}

enum Changes_Conclusion {
  Major
  Minor
}

enum Pass {
  Pass
  Fail
  Repeat
}

enum Revision_Approve {
  Waiting
  Approve
  Rejected
}

model proposal_assessment {
  id         String @id @default(uuid())
  // @relation
  group_id   String
  // @relation
  student_id String
  // @relation
  dosen_id   String
  value      String
}

model skripsi_assessment {
  id         String @id @default(uuid())
  // @relation
  group_id   String
  // @relation
  student_id String
  // @relation
  dosen_id   String
  value      String
}

model proposal_changes {
  id       String @id @default(uuid())
  // @relation
  group_id String
  // @relation
  dosen_id String
  changes  String
}

model skripsi_changes {
  id       String @id @default(uuid())
  // @relation
  group_id String
  // @relation
  dosen_id String
  changes  String
}

model Consultaion {
  id          String   @id @default(uuid())
  // @relation
  group_id    String
  description String
  date        DateTime
  // +dosen
}

model History {
  id          String   @id @default(uuid())
  user_id     String
  description String
  date        DateTime
  // @relation
  group_id    String
}

//-------------------Bimbingan Akademik-------------------
