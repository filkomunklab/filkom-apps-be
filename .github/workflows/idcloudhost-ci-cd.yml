name: Idcloudhost production CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: darellyuhu/filkomapp-be
          tags: latest
          registry: docker.io
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Prisma migrantion
        run: |
          npx prisma migrate deploy
        env:
          DATABASE_URL: postgres://${{secrets.POSTGRES_USER}}:${{secrets.POSTGRES_PASSWORD}}@${{secrets.SERVER_HOST}}:5432/${{secrets.POSTGRES_DB}}?schema=public

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy docker-compose.yml via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: docker-compose.yml
          target: ~/

      - name: SSH and run deploy docker compose script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            touch .env
            echo POSTGRES_USER=${{secrets.POSTGRES_USER}} >> .env
            echo POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}} >> .env
            echo POSTGRES_DB=${{secrets.POSTGRES_DB}} >> .env
            echo SECRET_KEY=${{secrets.SECRET_KEY}} >> .env
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker compose down
            docker compose pull
            docker compose up -d
            rm .env
